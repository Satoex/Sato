policy_module(sato, 1.100.1)

########################################
#
# Declarations
#

type sato_t;
type sato_exec_t;
init_daemon_domain(sato_t, sato_exec_t)

permissive sato_t;

type sato_initrc_exec_t;
init_script_file(sato_initrc_exec_t)

type sato_conf_t;
files_type(sato_conf_t)

type sato_var_lib_t;
files_type(sato_var_lib_t)

type sato_var_run_t;
files_type(sato_var_run_t)

type sato_port_t;
corenet_port(sato_port_t)

########################################
#
# sato local policy
#
allow sato_t self:process { fork };

allow sato_t self:fifo_file rw_fifo_file_perms;
allow sato_t self:unix_stream_socket create_stream_socket_perms;

manage_dirs_pattern(sato_t, sato_conf_t, sato_conf_t)
manage_files_pattern(sato_t, sato_conf_t, sato_conf_t)

manage_dirs_pattern(sato_t, sato_var_lib_t, sato_var_lib_t)
manage_files_pattern(sato_t, sato_var_lib_t, sato_var_lib_t)
files_var_lib_filetrans(sato_t, sato_var_lib_t, { dir file })

manage_dirs_pattern(sato_t, sato_var_run_t, sato_var_run_t)
manage_files_pattern(sato_t, sato_var_run_t, sato_var_run_t)

sysnet_dns_name_resolve(sato_t)
corenet_all_recvfrom_unlabeled(sato_t)

allow sato_t self:tcp_socket create_stream_socket_perms;
corenet_tcp_sendrecv_generic_if(sato_t)
corenet_tcp_sendrecv_generic_node(sato_t)
corenet_tcp_sendrecv_all_ports(sato_t)
corenet_tcp_bind_generic_node(sato_t)

gen_require(`
    type sato_port_t;
')
allow sato_t sato_port_t:tcp_socket name_bind;

gen_require(`
    type sato_port_t;
')
allow sato_t sato_port_t:tcp_socket name_connect;

domain_use_interactive_fds(sato_t)

files_read_etc_files(sato_t)

miscfiles_read_localization(sato_t)

sysnet_dns_name_resolve(sato_t)

allow sato_t sato_exec_t:file execute_no_trans;
allow sato_t self:process setsched;
corecmd_exec_ls(sato_t)
corenet_tcp_connect_http_port(sato_t)
dev_read_urand(sato_t)
fs_getattr_xattr_fs(sato_t)
kernel_read_system_state(sato_t)
